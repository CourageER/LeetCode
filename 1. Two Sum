public class Solution {
public int[] TwoSum(int[] nums, int target)
        {
            for (int i = 0; i < nums.Count(); i++)
            {
                List<int> result = new List<int>();
                result.Add(i);
                int temp = target - nums[i];
                for (int j = i + 1; j < nums.Count(); j++)
                {
                    if (temp == nums[j])
                    {
                        result.Add(j);
                        return result.ToArray();
                    }
                }
            }
            return new int[1];
        }
不需要在外面创建新数组

public int[] TwoSum(int[] nums, int target)
        {
            for (int i = 0; i < nums.Count(); i++)
            {
                int temp = target - nums[i];
                for (int j = i + 1; j < nums.Count(); j++)
                {
                    if (temp == nums[j])
                    {
                        return new int[]{i,j};
                    }
                }
            }
            return new int[1];
        }
        比上面一种，只需要在找到并返回的时候创建数组就行了
        但是时间复杂度是O(N平方)，超时了
        
public int[] TwoSum(int[] nums, int target)
        {
            Dictionary<int, int> dic = new Dictionary<int, int>();
            for (int i = 0; i < nums.Count(); i++)
            {
                dic.Add(nums[i], i);

            }
            for (int j = 0; j < nums.Count(); j++)
            {
                if (dic.ContainsKey(target - nums[j]))
                {
                    return new int[] {j, dic[target - nums[j]]};
                }
            }
                return new int[1];
        }
Runtime Error Message:
Line 7: System.ArgumentException: An item with the same key has already been added.
Last executed input:
[3,3]
6
Dic里不能添加相同的key,需要判断一下是否存在

public int[] TwoSum(int[] nums, int target)
        {
            Dictionary<int, int> dic = new Dictionary<int, int>();
            for (int i = 0; i < nums.Count(); i++)
            {
                if (dic.ContainsKey(nums[i]))
                {
                    continue;
                }
                dic.Add(nums[i], i);
            }
            for (int j = 0; j < nums.Count(); j++)
            {
                if (dic.ContainsKey(target - nums[j]))
                {
                    return new int[] {j, dic[target - nums[j]]};
                }
            }
                return new int[1];
        }
        Your input

[3,2,4]
6
Your answer
[0,0]
Expected answer
[1,2]
要检查当前循环不能是自己的这个位置
